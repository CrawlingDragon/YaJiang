{"version":3,"sources":["webpack:///./node_modules/compressorjs/dist/compressor.js"],"names":["global","factory","module","exports","this","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","prototype","obj","value","_extends","assign","hasOwnProperty","call","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","setTimeout","toDataURL","msToBlob","isBlob","toString","DEFAULTS","strict","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","resize","mimeType","convertTypes","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","isPositiveNumber","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","concat","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","subarray","join","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","getAdjustedSizes","_ref","aspectRatio","isValidWidth","isValidHeight","adjustedWidth","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","Compressor","file","options","image","Image","aborted","result","init","_this","load","url","createObjectURL","reader","onload","data","onabort","fail","onerror","onloadend","readAsArrayBuffer","readAsDataURL","_this2","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","_ref2","_this3","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","context","getContext","is90DegreesRotated","abs","resizable","max","_ref3","_ref4","_ref5","_getAdjustedSizes","_getAdjustedSizes2","_getAdjustedSizes3","_getAdjustedSizes4","_getAdjustedSizes4$wi","_getAdjustedSizes4$he","floor","min","destX","destY","destWidth","destHeight","params","srcX","srcY","srcWidth","srcHeight","_getAdjustedSizes5","contain","cover","_ref6","fillStyle","indexOf","fillRect","save","translate","PI","scale","drawImage","restore","done","_ref7","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete"],"mappings":"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","file":"js/ask~baseEdit~base_fram_detail~cropRecord~me_edit.f39ed8e7.js","sourcesContent":["/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var canvasToBlob = {exports: {}};\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n    (function (window) {\n\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n        height = _ref.height,\n        width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n      FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n\n      this.file = file;\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var file = this.file,\n            options = this.options;\n\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n        }\n\n        if (URL && !options.checkOrientation) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          this.reader = reader;\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              var orientation = resetAndGetOrientation(result);\n\n              if (orientation > 1 || !URL) {\n                // Generate a new URL which has the default orientation value\n                data.url = arrayBufferToDataURL(result, mimeType);\n\n                if (orientation > 1) {\n                  _extends(data, parseOrientation(orientation));\n                }\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n\n            _this.load(data);\n          };\n\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n\n        var file = this.file,\n            image = this.image;\n\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n            height = options.height;\n\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n\n        params.push(destX, destY, destWidth, destHeight);\n\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n\n        if (options.mimeType === 'image/jpeg') {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        var done = function done(result) {\n          if (!_this3.aborted) {\n            _this3.done({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          }\n        };\n\n        if (canvas.toBlob) {\n          canvas.toBlob(done, options.mimeType, options.quality);\n        } else {\n          done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref7) {\n        var naturalWidth = _ref7.naturalWidth,\n            naturalHeight = _ref7.naturalHeight,\n            result = _ref7.result;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        this.result = result;\n\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n\n    return Compressor;\n  }();\n\n  return Compressor;\n\n}));\n"],"sourceRoot":""}